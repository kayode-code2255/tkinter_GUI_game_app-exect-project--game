import tkinter as tk
import random 

# Initialize the tkinter window
root = tk.Tk()
root.title("Rock Paper Scissors")

# Create user input (buttons for rock, paper, scissors)
rock_btn = tk.Button(root, text="Rock")
paper_btn = tk.Button(root, text="Paper")
scissors_btn = tk.Button(root, text="Scissors")

# Place the buttons in the window using grid
rock_btn.grid(row=0, column=0, padx=10, pady=10)
paper_btn.grid(row=0, column=1, padx=10, pady=10)
scissors_btn.grid(row=0, column=2, padx=10, pady=10)

# Example function to handle button clicks
def on_rock_click():
  user_choice("Rock")

# Bind the function to the button click
rock_btn.configure(command=on_rock_click)

# Example function to handle button clicks for paper
def on_paper_click():
    user_choice("Paper")

# Bind the function to the button click for paper
paper_btn.configure(command=on_paper_click)

# Example function to handle button clicks for scissors
def on_scissors_click():
    user_choice("Scissors")

# Bind the function to the button click for scissors
scissors_btn.configure(command=on_scissors_click)
def user_choice(choice):
    computer = "computer_choice"()  # Get computer's choice
    result = determine_winner(choice, computer)  # Determine winner
    "update_result"(result)  # Update UI to display result
 

root.mainloop()

## User interraction

# Function to determine winner based on choices
def determine_winner(user_choice, computer_choice):
    # Logic to determine the winner based on the game rules
    if (user_choice == "rock" and computer_choice == "scissors") or \
       ( user_choice== "scissors" and computer_choice == "paper") or \
       (user_choice == "paper" and computer_choice == "rock"):
        return "You Win!"

    elif (user_choice == "scissors" and computer_choice == "rock") or \
         (user_choice == "paper" and computer_choice == "scissors") or \
         (user_choice == "rock" and computer_choice == "paper"):
        return "Computer Wins!"

    else:
        return "It's a Tie!"

    
def play_game(user_choice):
    choices = ['rock', 'paper', 'scissors']
    computer_choice = random.choice(choices)
    
    result = determine_winner(user_choice, computer_choice)
    result_label.config(text=f"You chose {user_choice}. Computer chose {computer_choice}. {result}")

def reset_game():
    result_label.config(text="Choose an option to start!")

def exit_game():
    root.destroy()

# Create tkinter window
root = tk.Tk()
root.title("Rock Paper Scissors")

# Create UI elements
title_label = tk.Label(root, text="Rock Paper Scissors", font=("Arial", 25))
title_label.pack()

result_label = tk.Label(root, text="Choose an option to start!", font=("Arial", 20))
result_label.pack()

button_frame = tk.Frame(root)
button_frame.pack()

rock_button = tk.Button(button_frame, text="Rock", command=lambda: play_game("rock"))
rock_button.pack(side=tk.LEFT, padx=10)

paper_button = tk.Button(button_frame, text="Paper", command=lambda: play_game("paper"))
paper_button.pack(side=tk.LEFT, padx=10)

scissors_button = tk.Button(button_frame, text="Scissors", command=lambda: play_game("scissors"))
scissors_button.pack(side=tk.LEFT, padx=10)

# Create a Play button
play_button = tk.Button(root, text="Play", command=lambda: play_game(None))
play_button.pack(pady=10)

reset_button = tk.Button(root, text="Reset", command=reset_game)
reset_button.pack(pady=10)

exit_button = tk.Button(root, text="Exit", command=exit_game)
exit_button.pack()

root.mainloop()

## Application Execution

options = ["rock", "paper", "scissors"]

for option in options:
    button = tk.Button(button_frame, text=option.capitalize(), command=lambda opt=option: play_game(opt))
    button.pack(side=tk.LEFT, padx=10)

play_button = tk.Button(root, text="Play", command=lambda: play_game(None))
play_button.pack(pady=10)

reset_button = tk.Button(root, text="Reset", command=reset_game)
reset_button.pack(pady=10)

exit_button = tk.Button(root, text="Exit", command=exit_game)
exit_button.pack()


root.mainloop()

